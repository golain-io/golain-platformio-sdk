/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_CELL_DATA_PB_H_INCLUDED
#define PB_CELL_DATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _cell {
    float voltage;
    float in_current;
    float out_current;
    float temperature;
} cell;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cell_init_default                        {0, 0, 0, 0}
#define cell_init_zero                           {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define cell_voltage_tag                         1
#define cell_in_current_tag                      2
#define cell_out_current_tag                     3
#define cell_temperature_tag                     4

/* Struct field encoding specification for nanopb */
#define cell_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    voltage,           1) \
X(a, STATIC,   SINGULAR, FLOAT,    in_current,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    out_current,       3) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       4)
#define cell_CALLBACK NULL
#define cell_DEFAULT NULL

extern const pb_msgdesc_t cell_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cell_fields &cell_msg

/* Maximum encoded size of messages (where known) */
#define cell_size                                20

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
